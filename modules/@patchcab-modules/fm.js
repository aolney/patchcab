import{Faceplate as t,Knob as n,Switch as e,Patch as _}from"https://olney.ai/patchcab/js/core.js";function s(t){let s,o,c,r,v,l,p,u,$,m,f,d,y,g,b,h,q,x,w,k,I,j;function C(n){t[4](n)}let F={label:"frequency",x:20,y:60,min:a,max:i,steps:500};function M(n){t[5](n)}void 0!==t[0].freq&&(F.value=t[0].freq),s=new n({props:F}),__sv.binding_callbacks.push((()=>__sv.bind(s,"value",C)));let S={size:"s",label:"fm",x:27,y:150,min:.01,max:1,precision:2};function T(n){t[6](n)}void 0!==t[0].fm&&(S.value=t[0].fm),r=new n({props:S}),__sv.binding_callbacks.push((()=>__sv.bind(r,"value",M)));let z={x:20,y:220,label:"sin",set:"sine"};function O(n){t[7](n)}void 0!==t[0].type&&(z.value=t[0].type),p=new e({props:z}),__sv.binding_callbacks.push((()=>__sv.bind(p,"value",T)));let A={x:60,y:220,label:"sqr",set:"square"};function B(n){t[8](n)}void 0!==t[0].type&&(A.value=t[0].type),m=new e({props:A}),__sv.binding_callbacks.push((()=>__sv.bind(m,"value",O)));let D={x:20,y:270,label:"tri",set:"triangle"};function E(n){t[9](n)}void 0!==t[0].type&&(D.value=t[0].type),y=new e({props:D}),__sv.binding_callbacks.push((()=>__sv.bind(y,"value",B)));let G={x:60,y:270,label:"saw",set:"sawtooth"};return void 0!==t[0].type&&(G.value=t[0].type),h=new e({props:G}),__sv.binding_callbacks.push((()=>__sv.bind(h,"value",E))),w=new _({props:{label:"fm",x:20,y:320,name:"signal-in",input:t[2],onConnect:t[3]}}),I=new _({props:{label:"out",x:60,y:320,name:"audio-out",output:t[1]}}),{c(){__sv.create_component(s.$$.fragment),c=__sv.space(),__sv.create_component(r.$$.fragment),l=__sv.space(),__sv.create_component(p.$$.fragment),$=__sv.space(),__sv.create_component(m.$$.fragment),d=__sv.space(),__sv.create_component(y.$$.fragment),b=__sv.space(),__sv.create_component(h.$$.fragment),x=__sv.space(),__sv.create_component(w.$$.fragment),k=__sv.space(),__sv.create_component(I.$$.fragment)},m(t,n){__sv.mount_component(s,t,n),__sv.insert(t,c,n),__sv.mount_component(r,t,n),__sv.insert(t,l,n),__sv.mount_component(p,t,n),__sv.insert(t,$,n),__sv.mount_component(m,t,n),__sv.insert(t,d,n),__sv.mount_component(y,t,n),__sv.insert(t,b,n),__sv.mount_component(h,t,n),__sv.insert(t,x,n),__sv.mount_component(w,t,n),__sv.insert(t,k,n),__sv.mount_component(I,t,n),j=!0},p(t,n){const e={};!o&&1&n&&(o=!0,e.value=t[0].freq,__sv.add_flush_callback((()=>o=!1))),s.$set(e);const _={};!v&&1&n&&(v=!0,_.value=t[0].fm,__sv.add_flush_callback((()=>v=!1))),r.$set(_);const a={};!u&&1&n&&(u=!0,a.value=t[0].type,__sv.add_flush_callback((()=>u=!1))),p.$set(a);const i={};!f&&1&n&&(f=!0,i.value=t[0].type,__sv.add_flush_callback((()=>f=!1))),m.$set(i);const c={};!g&&1&n&&(g=!0,c.value=t[0].type,__sv.add_flush_callback((()=>g=!1))),y.$set(c);const l={};!q&&1&n&&(q=!0,l.value=t[0].type,__sv.add_flush_callback((()=>q=!1))),h.$set(l);const $={};4&n&&($.input=t[2]),w.$set($);const d={};2&n&&(d.output=t[1]),I.$set(d)},i(t){j||(__sv.transition_in(s.$$.fragment,t),__sv.transition_in(r.$$.fragment,t),__sv.transition_in(p.$$.fragment,t),__sv.transition_in(m.$$.fragment,t),__sv.transition_in(y.$$.fragment,t),__sv.transition_in(h.$$.fragment,t),__sv.transition_in(w.$$.fragment,t),__sv.transition_in(I.$$.fragment,t),j=!0)},o(t){__sv.transition_out(s.$$.fragment,t),__sv.transition_out(r.$$.fragment,t),__sv.transition_out(p.$$.fragment,t),__sv.transition_out(m.$$.fragment,t),__sv.transition_out(y.$$.fragment,t),__sv.transition_out(h.$$.fragment,t),__sv.transition_out(w.$$.fragment,t),__sv.transition_out(I.$$.fragment,t),j=!1},d(t){__sv.destroy_component(s,t),t&&__sv.detach(c),__sv.destroy_component(r,t),t&&__sv.detach(l),__sv.destroy_component(p,t),t&&__sv.detach($),__sv.destroy_component(m,t),t&&__sv.detach(d),__sv.destroy_component(y,t),t&&__sv.detach(b),__sv.destroy_component(h,t),t&&__sv.detach(x),__sv.destroy_component(w,t),t&&__sv.detach(k),__sv.destroy_component(I,t)}}}function o(n){let e,_;return e=new t({props:{title:"FM",color:"var(--color-4)",$$slots:{default:[s]},$$scope:{ctx:n}}}),{c(){__sv.create_component(e.$$.fragment)},m(t,n){__sv.mount_component(e,t,n),_=!0},p(t,[n]){const _={};1031&n&&(_.$$scope={dirty:n,ctx:t}),e.$set(_)},i(t){_||(__sv.transition_in(e.$$.fragment,t),_=!0)},o(t){__sv.transition_out(e.$$.fragment,t),_=!1},d(t){__sv.destroy_component(e,t)}}}const a=40,i=2400;function c(t,n,e){let{state:_={freq:440,type:"sine",fm:1}}=n;const s=new Tone.FMOscillator(_.freq,_.type).start(),o=new Tone.Scale(0,2400);return t.$$set=t=>{"state"in t&&e(0,_=t.state)},t.$$.update=()=>{1&t.$$.dirty&&e(1,s.frequency.value=_.freq,s),1&t.$$.dirty&&e(1,s.type=_.type,s),1&t.$$.dirty&&e(2,o.max=2400*_.fm,o)},[_,s,o,t=>{t?o.connect(s.modulationIndex):(o.disconnect(s.modulationIndex),e(1,s.modulationIndex.overridden=!1,s),e(1,s.modulationIndex.value=3,s))},function(n){t.$$.not_equal(_.freq,n)&&(_.freq=n,e(0,_))},function(n){t.$$.not_equal(_.fm,n)&&(_.fm=n,e(0,_))},function(n){t.$$.not_equal(_.type,n)&&(_.type=n,e(0,_))},function(n){t.$$.not_equal(_.type,n)&&(_.type=n,e(0,_))},function(n){t.$$.not_equal(_.type,n)&&(_.type=n,e(0,_))},function(n){t.$$.not_equal(_.type,n)&&(_.type=n,e(0,_))}]}class r extends __sv.SvelteComponent{constructor(t){super(),__sv.init(this,t,c,o,__sv.safe_not_equal,{state:0})}}export{r as default};
