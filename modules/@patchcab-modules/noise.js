import{Faceplate as t,onMount as e,Switch as n,Patch as _}from"/js/core.js";function s(t){let e,s,o,a,i,c,r,p,v,u,$;function l(e){t[2](e)}let m={x:40,y:170,label:"pink",set:"pink"};function d(e){t[3](e)}void 0!==t[0].type&&(m.value=t[0].type),e=new n({props:m}),__sv.binding_callbacks.push((()=>__sv.bind(e,"value",l)));let f={x:40,y:220,label:"white",set:"white"};function y(e){t[4](e)}void 0!==t[0].type&&(f.value=t[0].type),a=new n({props:f}),__sv.binding_callbacks.push((()=>__sv.bind(a,"value",d)));let b={x:40,y:270,label:"brown",set:"brown"};return void 0!==t[0].type&&(b.value=t[0].type),r=new n({props:b}),__sv.binding_callbacks.push((()=>__sv.bind(r,"value",y))),u=new _({props:{label:"out",x:40,y:320,name:"audio-out",output:t[1]}}),{c(){__sv.create_component(e.$$.fragment),o=__sv.space(),__sv.create_component(a.$$.fragment),c=__sv.space(),__sv.create_component(r.$$.fragment),v=__sv.space(),__sv.create_component(u.$$.fragment)},m(t,n){__sv.mount_component(e,t,n),__sv.insert(t,o,n),__sv.mount_component(a,t,n),__sv.insert(t,c,n),__sv.mount_component(r,t,n),__sv.insert(t,v,n),__sv.mount_component(u,t,n),$=!0},p(t,n){const _={};!s&&1&n&&(s=!0,_.value=t[0].type,__sv.add_flush_callback((()=>s=!1))),e.$set(_);const o={};!i&&1&n&&(i=!0,o.value=t[0].type,__sv.add_flush_callback((()=>i=!1))),a.$set(o);const c={};!p&&1&n&&(p=!0,c.value=t[0].type,__sv.add_flush_callback((()=>p=!1))),r.$set(c)},i(t){$||(__sv.transition_in(e.$$.fragment,t),__sv.transition_in(a.$$.fragment,t),__sv.transition_in(r.$$.fragment,t),__sv.transition_in(u.$$.fragment,t),$=!0)},o(t){__sv.transition_out(e.$$.fragment,t),__sv.transition_out(a.$$.fragment,t),__sv.transition_out(r.$$.fragment,t),__sv.transition_out(u.$$.fragment,t),$=!1},d(t){__sv.destroy_component(e,t),t&&__sv.detach(o),__sv.destroy_component(a,t),t&&__sv.detach(c),__sv.destroy_component(r,t),t&&__sv.detach(v),__sv.destroy_component(u,t)}}}function o(e){let n,_;return n=new t({props:{title:"NOISE",color:"#e0e0e0",light:!0,$$slots:{default:[s]},$$scope:{ctx:e}}}),{c(){__sv.create_component(n.$$.fragment)},m(t,e){__sv.mount_component(n,t,e),_=!0},p(t,[e]){const _={};65&e&&(_.$$scope={dirty:e,ctx:t}),n.$set(_)},i(t){_||(__sv.transition_in(n.$$.fragment,t),_=!0)},o(t){__sv.transition_out(n.$$.fragment,t),_=!1},d(t){__sv.destroy_component(n,t)}}}function a(t,n,_){let{state:s={type:"pink"}}=n;const o=new Tone.Noise(s.type).start(),a=new Tone.AutoFilter({frequency:440,baseFrequency:200,octaves:8}).start();return o.connect(a),e((()=>()=>{o.dispose()})),t.$$set=t=>{"state"in t&&_(0,s=t.state)},t.$$.update=()=>{1&t.$$.dirty&&(o.type=s.type)},[s,a,function(e){t.$$.not_equal(s.type,e)&&(s.type=e,_(0,s))},function(e){t.$$.not_equal(s.type,e)&&(s.type=e,_(0,s))},function(e){t.$$.not_equal(s.type,e)&&(s.type=e,_(0,s))}]}class i extends __sv.SvelteComponent{constructor(t){super(),__sv.init(this,t,a,o,__sv.safe_not_equal,{state:0})}}export{i as default};
